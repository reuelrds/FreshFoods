# This is a basic workflow to help you get started with Actions

name: Build Website

# Controls when the action will run.
on:
  # Allows you to run this workflow manually via an API call
  workflow_dispatch:
    inputs:
      # Front End and Backend URL
      FRONTEND_URL:
        description: "Front End URL"
        required: true
        default: "http://localhost:4200"

      BACKEND_URL:
        description: "Backend End URL"
        required: true
        default: "http://localhost:8080/FreshFoods"

      # MySQL related variables.
      DATABASE_NAME:
        description: "Database Name"
        required: true
        default: "FreshFoods"

      DATABASE_USERNAME:
        description: "MySQL Database Username"
        required: true
        default: "root"

      DATABASE_PASSWORD:
        description: "MySQL Database Password"

      MYSQL_HOST:
        description: "MySQL Service Host"
        required: true
        default: "127.0.0.1"

      MYSQL_PORT:
        description: "MySQL Service Port"
        required: true
        default: "3306"

# Set Inputs as Environment Variables as envsubst requries environment variables
# for substitution.
env:
  MYSQL_HOST: ${{ github.event.inputs.MYSQL_HOST }}
  MYSQL_PORT: ${{ github.event.inputs.MYSQL_PORT }}
  BACKEND_URL: ${{ github.event.inputs.BACKEND_URL }}
  FRONTEND_URL: ${{ github.event.inputs.FRONTEND_URL }}
  DATABASE_NAME: ${{ github.event.inputs.DATABASE_NAME }}
  DATABASE_USERNAME: ${{ github.event.inputs.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ github.event.inputs.DATABASE_PASSWORD }}
  WEB_CONTENT_DIR: "./backend/FreshFoods/WebContent"

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Substitute Environment Variables in a database.sql File
        uses: danielr1996/envsubst-action@1.1.0
        with:
          input: "${{ env.WEB_CONTENT_DIR }}/WEB-INF/database.sql"
          output: "${{ env.WEB_CONTENT_DIR }}/WEB-INF/database.sql"

      - name: Substitute Environment Variables in a content.xml File
        uses: danielr1996/envsubst-action@1.1.0
        with:
          input: "${{ env.WEB_CONTENT_DIR }}/META-INF/context.xml"
          output: "${{ env.WEB_CONTENT_DIR }}/META-INF/context.xml"

      - name: Create env.ts file for the frontend
        run: |
          cat > env.ts << EOF
          export const env = {
            BACKEND_URL: "\${BACKEND_URL}",
            RAVE_API_KEY: "${{ secrets.RAVE_API_KEY }}",
          };
          EOF
          mv env.ts ./src/environments/
          echo "Hello"
          echo $GITHUB_WORKSPACE

      - name: Substitute Environment Variables in a env.ts File
        uses: danielr1996/envsubst-action@1.1.0
        with:
          input: "./src/environments/env.ts"
          output: "./src/environments/env.ts"

      - name: Upload The database artifacts
        uses: actions/upload-artifact@v2
        with:
          name: database
          path: |
            ${{ env.WEB_CONTENT_DIR }}/WEB-INF/database.sql

      - name: Upload The Backend artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend_files
          path: |
            ./backend/FreshFoods
            !${{ env.WEB_CONTENT_DIR }}/WEB-INF/database.sql"

      - name: Upload The Frontend artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend_files
          path: |
            .
            !backend/
            !.github/
            !.git/

  build-backend:
    name: Build Backend
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: backend_files

      - name: Delete Backend files Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: backend_files

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "15"

      - name: Package the backend into War File
        run: mvn package

      - name: Uploaded the War file
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: ./target/*.war

  build-frontend:
    name: Build Frontend
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: frontend_files

      - name: Delete Frontend Files Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: frontend_files

      - name: Setup Node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Build the Website
        run: npm run build:prod -- --base-herf "FreshFoods"

      - name: Uploaded the Dist folder
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: ./dist/freshfood

  bundle:
    name: Bundle App
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: papeloto/action-zip@v1
        with:
          files: .
          dest: ./Dist/dist.zip

      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./Dist s3://${{ secrets.S3_Bucket_Name }} --delete

      - name: Send SQS message
        run: |
          aws sqs send-message --queue-url "${{ secrets.AWS_SQS_QUEUE_URL }}" --message-body "Build Complete"
